# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page and misc actions for features currently in development (builder, ffdq)
# ~~~~
GET     /                                       controllers.Application.index()
GET     /jsroutes                               controllers.Application.jsRoutes()

GET     /builder                                controllers.Application.builder()

GET     /workflows                              controllers.Application.test()
GET     /about                                  controllers.Application.about()
GET     /help                                   controllers.Application.help()
GET     /auth                                   controllers.Users.checkAuth()
GET     /settings                               controllers.Application.settings()

GET     /admin                                  controllers.Application.admin()

# User authentication and user data routes, login, registration, password reset
# ~~~~
GET     /login                                  controllers.Users.login()
GET     /logout                                 controllers.Users.logout()

GET     /register                               controllers.Users.register()
POST    /register                               controllers.Users.registerSubmit()

GET     /updateinfo                             controllers.Users.preRegister(email: String)
POST    /updateinfo                             controllers.Users.preRegisterSubmit()

POST    /authenticate                           controllers.Users.authenticate()

GET     /reset                                  controllers.Users.reset()
POST    /reset                                  controllers.Users.resetPassword()

GET     /uploads                                controllers.Users.listUploads()
GET     /download                               controllers.Users.downloadFile(id: Long)

# User settings routes
# ~~~~
POST     /settings/changepw                     controllers.Users.changePassword()

# Admin and user management, user accounts and user groups
# ~~~~
GET     /admin/users                            controllers.Users.manage()
POST    /admin/users                            controllers.Users.createUser()
PUT     /admin/users/:id                        controllers.Users.updateUser(id: Long)

POST    /admin/groups                           controllers.Users.createGroup()

GET     /admin/groups                           controllers.Users.listGroups()
POST    /admin/users/group                      controllers.Users.addUserToGroup()

# Workflow management routes, package deployment and workflow metadata
# ~~~~
POST    /workflow/*name                         controllers.AsyncController.scheduleRun(name: String)

GET     /workflows/deploy                       controllers.Workflows.deploy()
POST    /workflows/deploy                       controllers.Workflows.deployWorkflows()

GET     /workflows/list                         controllers.Workflows.list()
POST    /workflows/delete                       controllers.Workflows.deletePackage(name : String)

GET     /workflows/yaml                         controllers.Workflows.workflowYaml(name : String)
POST    /workflows/upload                       controllers.Workflows.upload()
POST    /files/delete/:id                       controllers.Workflows.deleteUpload(id: Long)

# Workflow run routes for managing user runs and artifacts (result, report, logs)
# ~~~~
GET     /results/:uid                           controllers.Workflows.status(uid: Long)
PUT     /results/:uid                           controllers.Workflows.shareRun(uid: Long)

GET     /run/result/*id                         controllers.Workflows.resultArtifacts(id : Long)
GET     /run/archive/*id                        controllers.Workflows.resultArchive(id : Long)
GET     /run/file/*id                           controllers.Workflows.resultFile(id : Long)

GET     /run/report/*id                         controllers.Workflows.report(id : Long)
GET     /run/dataset/*id                        controllers.Workflows.dataset(id: Long)

GET     /run/error/*id                          controllers.Workflows.errorLog(id : Long)
GET     /run/output/*id                         controllers.Workflows.outputLog(id : Long)

POST    /run/remove                             controllers.Workflows.removeRuns()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                           controllers.Assets.at(path="/public", file)